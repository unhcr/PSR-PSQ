
// =============
// Form elements
// =============

@CellBackgroundInactive:  desaturate(darken(@TableBackground, 15%), 60%);
@CellBackgroundAccent:    darken(@TableBackground, 5%);

table.standard-table {

  input, textarea, select {
    display: block;
    width: 100%;
  }

  input[type="checkbox"] {
    display: block;
    width: 13px;
    height: 13px;
    margin: -1px auto;
  }

  input[type="text"], input[type="password"] {
    height: 16px;
    padding: (@CellVerticalPadding - 1px) (@CellHorizontalPadding - 2px);
    margin: (-@CellVerticalPadding) (1px - @CellHorizontalPadding);
    font: inherit;
    color: inherit;
    border: @InputBorder;
    background-color: @PageBackground;
    border-radius: @InputBorderRadius;
  }

  @TextareaHeight:  (13px + (2 * @CellVerticalPadding));
  textarea {
    height: @TextareaHeight;
    min-height: @TextareaHeight;
    padding: 1px (@CellHorizontalPadding - 2px) 0;
    margin: (-@CellVerticalPadding) (1px - @CellHorizontalPadding);
    font: inherit;
    color: inherit;
    background-color: @PageBackground;
    border: @InputBorder;
    border-radius: @InputBorderRadius;
    resize: vertical;
    overflow-y: hidden;
  }

  select {
    height: 22px;
    padding: (@CellVerticalPadding - 2px) (@CellHorizontalPadding - 2px);
    margin: (-(@CellVerticalPadding + 1px)) (1px - @CellHorizontalPadding);
    font: inherit;
    color: inherit;
    border: @InputBorder;
    background-color: @PageBackground;
    border-radius: @InputBorderRadius;
  }

  // Distinctive background colour for disabled form elements
  input[type="text"], textarea, select {
    &[disabled] {
      background-color: @InputDisabledBackground;
    }
  }

  // Highlight form element with input focus
  input, textarea, select {
    &:focus {
      border-color: @InputFocusColour;
      outline: 0;
    }
  }
  input[type="checkbox"] {
    &:focus {
      outline: 1px solid @InputFocusColour;
    }
  }
}

// ===============================
// Styling for specific data types
// ===============================

// All numeric data
td.numeric {
  text-align: right;
  input {
    text-align: right;
  }
}

// Column widths for various-sized integers
@DigitWidth:  7px;
@CommaWidth:  3px;
// .cell-width(@DigitCount, @ColCount: 1) {
//   width: ((@ColCount * ((@DigitWidth * @DigitCount) + (@CommaWidth * floor((@DigitCount - 1) / 3)))) +
//            ((@ColCount - 1) * (2 * @CellHorizontalPadding)) + (@ColCount - 1));
// }
.cell-width(@DigitCount) {
  width: ((@DigitWidth * @DigitCount) + (@CommaWidth * floor((@DigitCount - 1) / 3)) +
          (2 * @CellHorizontalPadding) + 1px);
}

.digits-3 {
  .cell-width(3);
}
.digits-4 {
  .cell-width(4);
}
.digits-5 {
  .cell-width(5);
}
.digits-6 {
  .cell-width(6);
}
.digits-7 {
  .cell-width(7);
}
.digits-8 {
  .cell-width(8);
}
.digits-9 {
  .cell-width(9);
}
.digits-10 {
  .cell-width(10);
}
.digits-11 {
  .cell-width(11);
}
.digits-12 {
  .cell-width(12);
}
.digits-13 {
  .cell-width(13);
}
.digits-14 {
  .cell-width(14);
}
.digits-15 {
  .cell-width(15);
}

// Classes for specific columns
.inactive-cell {
  background-color: @CellBackgroundInactive;
}

.centred {
  text-align: center !important;
}

.flow-label {
  width: 75px;
}

.population-type {
  width: 240px;
}

.population-type-short {
  width: 110px;
}

.table-number {
  width: 40px;
  text-align: center;
}

.sex-label {
  width: 55px;
}

.location {
  white-space: nowrap;
  overflow: hidden;
}

.origin {
  width: 390px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.urban-rural {
  width: 44px;
  text-align: center;
}

.accommodation-type {
  width: 44px;
  text-align: center;
}

.displacement-status {
  width: 125px;
  text-align: center;
}

.ppg {
  width: 140px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.refugee-like {
  width: 56px;
  // text-align: center;
}

.stateless-class {
  width: 58px;
  text-align: center;
}

.source {
  width: 47px;
  text-align: center;
}

.basis {
  width: 47px;
  text-align: center;
}

.year {
  width: 30px;
  text-align: center;
}

// Accented columns
.accent {
  background-color: @CellBackgroundAccent;
}

// ====================
// Login screen styling
// ====================

.login {
  width: 400px;
  margin: 0 auto;

  h2 {
    width: 100%;
    margin-bottom: 25px;
    padding-bottom: 10px;
    border-bottom: @TableBorder;
    font-size: (@BaseFontSize * 1.75);
    text-indent: 0.5em;
  }

  label {
    display: block;
    width: 50%;
    margin: 15px auto 0;
    font-size: (@BaseFontSize * 1.25);
  }

  input {
    width: 100%;
    margin: 3px -4px;
    padding: 2px;
  }

  div {
    text-align: center;
  }

  button {
    margin-top: 20px;
    padding: 4px 10px;
    font-size: (@BaseFontSize * 1.25);
  }
}

// ==============
// Button styling
// ==============

@ButtonTextColour:          white;
@ButtonBaseColour:          darken(@BaseColour, 15%);
@ButtonColourDark:          darken(@ButtonBaseColour, 12%);
@ButtonColourLight:         lighten(@ButtonBaseColour, 12%);
@ButtonColourInset:         lighten(@ButtonBaseColour, 30%);
@ButtonColourDisabled:      lightgrey;
@ButtonRGBADark:            argb(@ButtonColourDark);
@ButtonRGBALight:           argb(@ButtonColourLight);
@ButtonBorderRadius:        6px;

button, input[type="submit"] {
  // margin: 5px;
  // padding: 2px 10px;
  font-family: inherit;
  font-weight: bold;
  color: @ButtonTextColour;
  background-color: @ButtonColourLight;
  background-image: -moz-linear-gradient(top, @ButtonColourLight, @ButtonColourDark);
  background-image: -webkit-gradient(linear, 0 0, 0 100%,
                                     from(@ButtonColourLight), to(@ButtonColourDark));
  background-image: -webkit-linear-gradient(top, @ButtonColourLight, @ButtonColourDark);
  background-image: linear-gradient(to bottom, @ButtonColourLight, @ButtonColourDark);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{ButtonRGBALight}',
                                                     endColorstr='@{ButtonRGBADark}',
                                                     GradientType=0);
  border: 1px solid @ButtonBaseColour;
  border-radius: @ButtonBorderRadius;
  -moz-box-shadow: inset 0px 1px 0px 0px @ButtonColourInset;
  -webkit-box-shadow: inset 0px 1px 0px 0px @ButtonColourInset;
  box-shadow: inset 0px 1px 0px 0px @ButtonColourInset;

  &:hover {
    background-image: -moz-linear-gradient(top, @ButtonColourDark, @ButtonColourLight);
    background-image: -webkit-gradient(linear, 0 0, 0 100%,
                                       from(@ButtonColourDark), to(@ButtonColourLight));
    background-image: -webkit-linear-gradient(top, @ButtonColourDark, @ButtonColourLight);
    background-image: linear-gradient(to bottom, @ButtonColourDark, @ButtonColourLight);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{ButtonRGBADark}',
                                                       endColorstr='@{ButtonRGBALight}',
                                                       GradientType=0);
  }

  &:active {
    position: relative;
    top: 1px;
    left: 1px;
  }

  &.disabled, &[disabled="disabled"] {
    background-color: @ButtonColourDisabled;
    background-image: none;
    filter: none;
    border: 1px solid @ButtonColourDisabled;
    box-shadow: none;
    cursor: default;

    &:active {
      position: static;
    }
  }
}